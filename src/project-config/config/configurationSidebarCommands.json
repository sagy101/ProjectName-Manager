[
  {
    "id": "analyticsLogCommand",
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=analytics-logs --pattern=infinite",
      "tabTitle": "Analytics Service Logs"
    }
  },
  {
    "id": "processingLogCommand",
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=processing-logs --pattern=infinite",
      "tabTitle": "Processing Logs"
    }
  },
  {
    "id": "service-a",
    "conditions": {
      "enabled": true,
      "attachState.service-a": false
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=service-a --pattern=infinite",
      "associatedContainers": [
        "service-a-cache",
        "service-a-db-replica",
        "service-a-db-master",
        "service-a-redis",
        "service-a-localdb"
      ],
      "tabTitle": {
        "base": "Service-A + Database"
      }
    }
  },
  {
    "id": "service-a",
    "conditions": {
      "enabled": true,
      "attachState.service-a": true,
      "mode": "suspend"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=service-a --pattern=infinite --debug=suspend",
      "associatedContainers": [
        "service-a-cache",
        "service-a-db-replica",
        "service-a-db-master",
        "service-a-redis",
        "service-a-localdb"
      ],
      "tabTitle": {
        "base": "Service-A + Database (Debug Suspend)"
      }
    }
  },
  {
    "id": "service-a",
    "conditions": {
      "enabled": true,
      "attachState.service-a": true,
      "mode": "run"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=service-a --pattern=infinite --debug=run --port=${debugPort}",
      "associatedContainers": [
        "service-a-cache",
        "service-a-db-replica",
        "service-a-db-master",
        "service-a-redis",
        "service-a-localdb"
      ],
      "tabTitle": {
        "base": "Service-A + Database (Debug Run)"
      }
    }
  },
  {
    "id": "ui-component",
    "conditions": {
      "service-aConfig.enabled": true,
      "ui-componentConfig.enabled": true,
      "ui-componentConfig.mode": "dev"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=ui-component --pattern=infinite --mode=dev",
      "tabTitle": "UI Component (Dev Mode)"
    }
  },
  {
    "id": "ui-component",
    "conditions": {
      "service-aConfig.enabled": true,
      "ui-componentConfig.enabled": true,
      "ui-componentConfig.mode": "normal"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=ui-component --pattern=success-30",
      "tabTitle": "UI Component"
    }
  },
  {
    "id": "backend-service",
    "conditions": {
      "enabled": true,
      "deploymentType": "process"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=backend-service --pattern=infinite --mode=process",
      "tabTitle": "Backend Service (Process)",
      "refreshConfig": {
        "prependCommands": [
          {
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=backend-build --pattern=success-15 && "
          }
        ]
      }
    }
  },
  {
    "id": "backend-service",
    "conditions": {
      "enabled": true,
      "deploymentType": "container"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=backend-service --pattern=infinite --mode=container",
      "associatedContainers": ["backend-agent"],
      "tabTitle": "Backend Service (Container)"
    }
  },
  {
    "id": "api-service-component",
    "conditions": {
      "enabled": true,
      "api-serviceConfig.enabled": true,
      "api-service-componentConfig.mode": "mock"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=api-service --pattern=infinite --mode=mock",
      "tabTitle": {
        "base": "API Service Component (Mock)"
      }
    }
  },
  {
    "id": "api-service-component",
    "conditions": {
      "enabled": true,
      "api-serviceConfig.enabled": true,
      "api-service-componentConfig.mode": "process"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=api-service --pattern=infinite --mode=process --port=8083",
      "tabTitle": {
        "base": "API Service Component (Process)"
      }
    }
  },
  {
    "id": "api-service-component",
    "conditions": {
      "enabled": true,
      "api-serviceConfig.enabled": true,
      "api-service-componentConfig.mode": "forwarding",
      "apiServicePodSelected": true
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=api-forwarding --pattern=infinite --port=8083",
      "tabTitle": {
        "base": "API Service Component",
        "conditionalAppends": [
          {
            "condition": "api-service-componentConfig.mode === 'forwarding' && apiServicePodSelected === true",
            "append": " (Forwarding ${apiServicePod})"
          }
        ]
      }
    }
  },
  {
    "id": "external-integration",
    "conditions": {
      "enabled": true,
      "api-serviceConfig.enabled": true,
      "integrationPodSelected": true
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=external-integration --pattern=infinite --port=8084",
      "tabTitle": {
        "base": "External Integration"
      }
    }
  },
  {
    "id": "logger-service",
    "conditions": {
      "enabled": true,
      "attachState.logger-service": false
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=logger-service --pattern=infinite",
      "tabTitle": "Logger Service"
    }
  },
  {
    "id": "logger-service",
    "conditions": {
      "enabled": true,
      "attachState.logger-service": true,
      "mode": "suspend"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=logger-service --pattern=infinite --debug=suspend",
      "tabTitle": "Logger Service (Debug Suspend)"
    }
  },
  {
    "id": "logger-service",
    "conditions": {
      "enabled": true,
      "attachState.logger-service": true,
      "mode": "run"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=logger-service --pattern=infinite --debug=run --port=${debugPort}",
      "tabTitle": "Logger Service (Debug Run)"
    }
  },
  {
    "id": "processing-engine",
    "conditions": {
      "enabled": true,
      "deploymentType": "process"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=processing-engine --pattern=success-30",
      "tabTitle": {
        "base": "Processing Engine (Process)"
      },
      "refreshConfig": {
        "prependCommands": [
          {
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=processing-build --pattern=success-10 && "
          }
        ]
      }
    }
  },
  {
    "id": "processing-engine",
    "conditions": {
      "enabled": true,
      "deploymentType": "container"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=processing-engine --pattern=success-30 --mode=container",
      "associatedContainers": ["processing-engine"],
      "tabTitle": "Processing Engine (Container)"
    }
  },
  {
    "id": "analytics-service",
    "conditions": {
      "enabled": true,
      "mode": "development"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=analytics-service --pattern=infinite --mode=development",
      "tabTitle": {
        "base": "Analytics Service (Dev)"
      }
    }
  },
  {
    "id": "analytics-service",
    "conditions": {
      "enabled": true,
      "mode": "staging"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=analytics-service --pattern=infinite --mode=staging",
      "tabTitle": {
        "base": "Analytics Service (Staging)"
      }
    }
  },
  {
    "id": "analytics-service",
    "conditions": {
      "enabled": true,
      "mode": "production"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=analytics-service --pattern=infinite --mode=production",
      "tabTitle": {
        "base": "Analytics Service (Prod)"
      }
    }
  },
  {
    "id": "data-service",
    "conditions": {
      "enabled": true,
      "data-serviceConfig.enabled": true,
      "data-serviceConfig.mode": "batch"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=data-service --pattern=success-45 --mode=batch",
      "tabTitle": {
        "base": "Data Service (Batch)"
      }
    }
  },
  {
    "id": "data-service",
    "conditions": {
      "enabled": true,
      "data-serviceConfig.enabled": true,
      "data-serviceConfig.mode": "stream"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=data-service --pattern=infinite --mode=stream",
      "tabTitle": {
        "base": "Data Service (Stream)"
      }
    }
  },
  {
    "id": "data-service",
    "conditions": {
      "enabled": true,
      "data-serviceConfig.enabled": true,
      "data-serviceConfig.mode": "hybrid"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=data-service --pattern=infinite --mode=hybrid",
      "tabTitle": {
        "base": "Data Service (Hybrid)"
      }
    }
  },
  {
    "id": "processing-component",
    "conditions": {
      "enabled": true,
      "processing-componentConfig.enabled": true,
      "processing-componentConfig.mode": "engine-a"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=processing-component --pattern=infinite --mode=engine-a",
      "tabTitle": {
        "base": "Processing Component (Engine A)"
      }
    }
  },
  {
    "id": "processing-component",
    "conditions": {
      "enabled": true,
      "processing-componentConfig.enabled": true,
      "processing-componentConfig.mode": "engine-b"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=processing-component --pattern=infinite --mode=engine-b",
      "tabTitle": {
        "base": "Processing Component (Engine B)"
      }
    }
  },
  {
    "id": "processing-component",
    "conditions": {
      "enabled": true,
      "processing-componentConfig.enabled": true,
      "processing-componentConfig.mode": "engine-c"
    },
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=processing-component --pattern=infinite --mode=engine-c",
      "tabTitle": {
        "base": "Processing Component (Engine C)"
      }
    }
  },
  {
    "id": "runDocs",
    "command": {
      "base": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=documentation --pattern=infinite",
      "tabTitle": "Documentation Server"
    }
  }
] 
