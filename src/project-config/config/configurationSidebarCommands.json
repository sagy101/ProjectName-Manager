[
  {
    "id": "testAnalyticsLogCommand",
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Test Analytics Logs'",
      "tabTitle": "Test Analytics Logs"
    }
  },
  {
    "id": "mlEngineLogCommand",
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='ML Logs'",
      "tabTitle": "ML Logs"
    }
  },
  {
    "id": "service-a",
    "conditions": {
      "enabled": true,
      "attachState.service-a": false
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=30 --result=success --silent=false --containers='container-a,container-b,container-c,container-d,container-e' --variables='nodeVersion=${nodeVersion}' --tabTitle='Service A'",
      "associatedContainers": [
        "container-a",
        "container-b",
        "container-c",
        "container-d",
        "container-e"
      ],
      "tabTitle": {
        "base": "Service A"
      }
    }
  },
  {
    "id": "service-a",
    "conditions": {
      "enabled": true,
      "attachState.service-a": true,
      "mode": "suspend"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=30 --result=success --silent=false --containers='container-a,container-b,container-c,container-d,container-e' --variables='nodeVersion=${nodeVersion}' --tabTitle='Service A (Debug Suspend)'",
      "associatedContainers": [
        "container-a",
        "container-b",
        "container-c",
        "container-d",
        "container-e"
      ],
      "tabTitle": {
        "base": "Service A (Debug Suspend)"
      }
    }
  },
  {
    "id": "service-a",
    "conditions": {
      "enabled": true,
      "attachState.service-a": true,
      "mode": "run"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=30 --result=success --silent=false --containers='container-a,container-b,container-c,container-d,container-e' --variables='nodeVersion=${nodeVersion},debugPort=${debugPort}' --tabTitle='Service A (Debug Run)'",
      "associatedContainers": [
        "container-a",
        "container-b",
        "container-c",
        "container-d",
        "container-e"
      ],
      "tabTitle": {
        "base": "Service A (Debug Run)"
      }
    }
  },
  {
    "id": "frontend",
    "conditions": {
      "service-aConfig.enabled": true,
      "frontendConfig.enabled": true,
      "frontendConfig.mode": "dev"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Frontend (Dev Mode)'",
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": "Frontend (Dev Mode)"
    }
  },
  {
    "id": "frontend",
    "conditions": {
      "service-aConfig.enabled": true,
      "frontendConfig.enabled": true,
      "frontendConfig.mode": "normal"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Frontend'",
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": "Frontend"
    }
  },
  {
    "id": "service-b",
    "conditions": {
      "enabled": true,
      "deploymentType": "process"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Service B (Process)'",
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": "Service B (Process)",
      "refreshConfig": {
        "prependCommands": [
          {
            "command": "echo 'Prepend command simulated' && "
          }
        ]
      }
    }
  },
  {
    "id": "service-b",
    "conditions": {
      "enabled": true,
      "deploymentType": "container"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=30 --result=success --silent=false --containers='container-f' --tabTitle='Service B (Container)'",
      "associatedContainers": ["container-f"],
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": "Service B (Container)"
    }
  },
  {
    "id": "url-intelligence-sub",
    "conditions": {
      "enabled": true,
      "service-cConfig.enabled": true,
      "service-cConfig.mode": "mock"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='URL Intelligence (Mock)'",
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": {
        "base": "URL Intelligence (Mock)"
      }
    }
  },
  {
    "id": "service-c-sub",
    "conditions": {
      "enabled": true,
      "service-cConfig.enabled": true,
      "service-cConfig.mode": "process"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='kubectlContext=${kubectlContext}' --tabTitle='URL Intelligence (Process)'",
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": {
        "base": "URL Intelligence (Process)"
      }
    }
  },
  {
    "id": "service-c-sub",
    "conditions": {
      "enabled": true,
      "service-cConfig.enabled": true,
      "service-cConfig.mode": "forwarding",
      "urlIntelPodSelected": true
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='kubectlContext=${kubectlContext},urlIntelPod=${urlIntelPod}' --tabTitle='URL Intelligence (Forwarding)'",
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": {
        "base": "URL Intelligence",
        "conditionalAppends": [
          {
            "condition": "service-cConfig.mode === 'forwarding' && urlIntelPodSelected === true",
            "append": " (Forwarding ${urlIntelPod})"
          }
        ]
      }
    }
  },
  {
    "id": "threat-intelligence-sub",
          "conditions": {
        "enabled": true,
        "service-cConfig.enabled": true,
        "threatIntelPodSelected": true
      },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='kubectlContext=${kubectlContext},threatIntelPod=${threatIntelPod}' --tabTitle='Threat Intelligence'",
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": {
        "base": "Threat Intelligence"
      }
    }
  },
  {
    "id": "service-d",
    "conditions": {
      "enabled": true,
      "attachState.service-d": false
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='nodeVersion=${nodeVersion},gcloudProject=${gcloudProject}' --tabTitle='Service D'",
      "tabTitle": "Service D"
    }
  },
  {
    "id": "service-d",
    "conditions": {
      "enabled": true,
      "attachState.service-d": true,
      "mode": "suspend"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='nodeVersion=${nodeVersion},gcloudProject=${gcloudProject}' --tabTitle='Service D (Debug Suspend)'",
      "tabTitle": "Service D (Debug Suspend)"
    }
  },
  {
    "id": "service-d",
    "conditions": {
      "enabled": true,
      "attachState.service-d": true,
      "mode": "run"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='nodeVersion=${nodeVersion},gcloudProject=${gcloudProject},debugPort=${debugPort}' --tabTitle='Service D (Debug Run)'",
      "tabTitle": "Service D (Debug Run)"
    }
  },
  {
    "id": "service-e",
    "conditions": {
      "enabled": true,
      "deploymentType": "process"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Service E (Process)'",
      "tabTitle": {
        "base": "Service E (Process)"
      },
      "refreshConfig": {
        "prependCommands": [
          {
            "command": "echo 'Prepend command simulated' && "
          }
        ]
      }
    }
  },
  {
    "id": "service-e",
    "conditions": {
      "enabled": true,
      "deploymentType": "container"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=30 --result=success --silent=false --containers='container-g' --tabTitle='Service E (Container)'",
      "associatedContainers": ["container-g"],
      "prefix": "nvm use ${nodeVersion} && ",
      "tabTitle": "Service E (Container)"
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "mode": "development"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Service F (Dev)'",
      "tabTitle": {
        "base": "Service F (Dev)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "mode": "staging"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Service F (Staging)'",
      "tabTitle": {
        "base": "Service F (Staging)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "mode": "production"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --tabTitle='Service F (Prod)'",
      "tabTitle": {
        "base": "Service F (Prod)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "dataProcessorConfig.enabled": true,
      "dataProcessorConfig.mode": "batch"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='mode=${mode}' --tabTitle='Data Processor (Batch)'",
      "tabTitle": {
        "base": "Data Processor (Batch)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "dataProcessorConfig.enabled": true,
      "dataProcessorConfig.mode": "stream"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='mode=${mode}' --tabTitle='Data Processor (Stream)'",
      "tabTitle": {
        "base": "Data Processor (Stream)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "dataProcessorConfig.enabled": true,
      "dataProcessorConfig.mode": "hybrid"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='mode=${mode}' --tabTitle='Data Processor (Hybrid)'",
      "tabTitle": {
        "base": "Data Processor (Hybrid)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "mlEngineConfig.enabled": true,
      "mlEngineConfig.mode": "tensorflow"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='mode=${mode}' --tabTitle='ML Engine (TensorFlow)'",
      "tabTitle": {
        "base": "ML Engine (TensorFlow)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "mlEngineConfig.enabled": true,
      "mlEngineConfig.mode": "pytorch"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='mode=${mode}' --tabTitle='ML Engine (PyTorch)'",
      "tabTitle": {
        "base": "ML Engine (PyTorch)"
      }
    }
  },
  {
    "id": "service-f",
    "conditions": {
      "enabled": true,
      "mlEngineConfig.enabled": true,
      "mlEngineConfig.mode": "sklearn"
    },
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='mode=${mode}' --tabTitle='ML Engine (Scikit-learn)'",
      "tabTitle": {
        "base": "ML Engine (Scikit-learn)"
      }
    }
  },
  {
    "id": "runStorybook",
    "command": {
      "base": "node ./ProjectName-Manager/scripts/generic-command-simulator.js --duration=infinite --result=success --silent=false --variables='nodeVersion=${nodeVersion}' --tabTitle='Storybook'",
      "tabTitle": "Storybook"
    }
  }
] 
