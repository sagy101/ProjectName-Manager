{
  "header": {
    "title": "General Environment",
    "dropdownSelectors": [
      {
        "id": "gcloudProject",
        "command": "gcloud projects list --format=\"value(projectId)\"",
        "parseResponse": "lines",
        "placeholder": "Select project...",
        "loadingText": "Loading projects...",
        "errorText": "Error loading projects",
        "noOptionsText": "No projects found",
        "defaultValue": {
              "contains": "dev5"
        }
      }
    ]
  },
  "categories": [
    {
      "category": {
        "title": "Cloud",
        "verifications": [
          {
            "id": "cloudGcloudCLI",
            "title": "gcloud CLI",
            "command": "gcloud --version",
            "checkType": "outputContains",
            "expectedValue": "Google Cloud SDK",
            "outputStream": "stdout",
            "fixCommand": "brew install --cask google-cloud-sdk"
          },
          {
            "id": "cloudKubectlCLI",
            "title": "kubectl CLI",
            "command": "kubectl version --client",
            "checkType": "outputContains",
            "expectedValue": "Client Version:",
            "outputStream": "stdout",
            "fixCommand": "brew install kubectl"
          },
          {
            "id": "cloudKubectx",
            "title": "kubectx",
            "command": "kubectx --help",
            "checkType": "commandSuccess",
            "fixCommand": "brew install kubectx"
          }
        ]
      }
    },
    {
      "category": {
        "title": "Container Runtime",
        "verifications": [
          {
            "id": "dockerRunning",
            "title": "Docker Desktop running",
            "command": "docker version --format '{{.Server.Version}}'",
            "checkType": "commandSuccess"
          },
          {
            "id": "dockerDaemon",
            "title": "Docker daemon accessible",
            "command": "docker ps",
            "checkType": "commandSuccess"
          },
          {
            "id": "rancherDesktop",
            "title": "Rancher Desktop (if installed)",
            "command": "rdctl version",
            "checkType": "outputContains",
            "expectedValue": "",
            "outputStream": "stdout",
            "fixCommand": "brew install --cask rancher"
          },
          {
            "id": "containerRuntime",
            "title": "Container runtime available",
            "command": "docker info --format '{{.ServerVersion}}'",
            "checkType": "outputContains",
            "expectedValue": "",
            "outputStream": "stdout"
          }
        ]
      }
    },
    {
      "category": {
        "title": "Node.js",
        "verifications": [
          {
            "id": "nodeJs",
            "title": "Node.js 15.x or 16.x",
            "command": "nvm ls",
            "checkType": "outputContains",
            "expectedValue": ["v15.", "v16."],
            "versionId": "nodeVersion",
            "outputStream": "stdout",
            "fixCommand": "nvm install 16"
          },
          {
            "id": "nvmInstalled",
            "title": "Nvm installed",
            "command": "nvm --version",
            "checkType": "commandSuccess",
            "fixCommand": "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash"
          }
        ]
      }
    },
    {
      "category": {
        "title": "Go",
        "verifications": [
          {
            "id": "goInstalled",
            "title": "Go installed",
            "command": "go version",
            "checkType": "outputContains",
            "expectedValue": "go version go1",
            "fixCommand": "brew install go"
          },
          {
            "id": "goLocation",
            "title": "Go location: $HOME/go",
            "checkType": "pathExists",
            "pathValue": "$HOME/go",
            "pathType": "directory"
          },
          {
            "id": "goPathConfig",
            "title": "GOPATH configured: $HOME/go",
            "checkType": "envVarEquals",
            "variableName": "GOPATH",
            "expectedValue": "$HOME/go",
            "fixCommand": "GOPATH_LINE='export GOPATH=$HOME/go\\nexport PATH=$PATH:$GOPATH/bin'; for f in ~/.zshrc ~/.bash_profile; do [ -f \"$f\" ] || touch \"$f\"; printf \"$GOPATH_LINE\\n\" >> \"$f\"; done; [ -n \"$ZSH_VERSION\" ] && source ~/.zshrc || { [ -n \"$BASH_VERSION\" ] && source ~/.bash_profile; }"
          },
          {
            "id": "goPathIncludes",
            "title": "PATH includes: $GOPATH/bin",
            "command": "echo $PATH",
            "checkType": "outputContains",
            "expectedValue": "$GOPATH/bin"
          }
        ]
      }
    },
    {
      "category": {
        "title": "Additional",
        "verifications": [
          {
            "id": "javaVersion",
            "title": "Java 17 installed",
            "command": "java -version",
            "checkType": "outputContains",
            "expectedValue": "openjdk version \"17.",
            "outputStream": "stderr",
            "fixCommand": "brew install openjdk@17"
          },
          {
            "id": "additionalCloudbees",
            "title": "CLOUDBEES_FEATURES_ENV_KEY",
            "checkType": "envVarExists",
            "variableName": "CLOUDBEES_FEATURES_ENV_KEY"
          },
          {
            "id": "homebrewInstalled",
            "title": "Homebrew installed",
            "command": "brew --version",
            "checkType": "commandSuccess",
            "fixCommand": "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\""
          }
        ]
      }
    }
  ]
}