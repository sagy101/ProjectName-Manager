{
  "header": {
    "title": "General Environment",
    "dropdownSelectors": [
      {
        "id": "environment",
        "command": "node ./ProjectName-Manager/test-utils/commands/mock-command.js --service=environment-list --pattern=success-4 --silent",
        "parseResponse": "lines",
        "placeholder": "Select environment...",
        "loadingText": "Loading environments...",
        "errorText": "Error loading environments",
        "noOptionsText": "No environments found",
        "defaultValue": {
          "contains": "development"
        }
      }
    ]
  },
  "categories": [
    {
      "category": {
        "title": "Cloud",
        "verifications": [
          {
            "id": "cloudGcloudCLI",
            "title": "gcloud CLI",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=GcloudInstalled",
            "checkType": "outputContains",
            "expectedValue": "Google Cloud SDK",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=GcloudInstalled",
            "fixPriority": 3
          },
          {
            "id": "cloudKubectlCLI",
            "title": "kubectl CLI",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=KubectlInstalled",
            "checkType": "outputContains",
            "expectedValue": "Client Version:",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=KubectlInstalled",
            "fixPriority": 3
          },
          {
            "id": "cloudKubectx",
            "title": "kubectx",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=KubectxInstalled",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=KubectxInstalled",
            "fixPriority": 3
          }
        ]
      }
    },
    {
      "category": {
        "title": "Container Runtime",
        "verifications": [
          {
            "id": "dockerRunning",
            "title": "Docker Desktop running",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=DockerInstalled",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=DockerInstalled",
            "fixPriority": 2
          },
          {
            "id": "dockerDaemon",
            "title": "Docker daemon accessible",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=DockerInstalled",
            "checkType": "commandSuccess"
          },
          {
            "id": "rancherDesktop",
            "title": "Rancher Desktop (if installed)",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=RancherDesktopInstalled",
            "checkType": "outputContains",
            "expectedValue": "rdctl version",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=RancherDesktopInstalled",
            "fixPriority": 4
          },
          {
            "id": "containerRuntime",
            "title": "Container runtime available",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=DockerInstalled",
            "checkType": "outputContains",
            "expectedValue": "Docker version",
            "outputStream": "stdout"
          }
        ]
      }
    },
    {
      "category": {
        "title": "Node.js",
        "verifications": [
          {
            "id": "nodeJs",
            "title": "Node.js 15.x or 16.x",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=NodeJSInstalled",
            "checkType": "outputContains",
            "expectedValue": ["v15.", "v16.", "v18."],
            "versionId": "nodeVersion",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=NodeJSInstalled",
            "fixPriority": 2
          },
          {
            "id": "nvmInstalled",
            "title": "Nvm installed",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=NvmInstalled",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=NvmInstalled",
            "fixPriority": 1
          }
        ]
      }
    },
    {
      "category": {
        "title": "Go",
        "verifications": [
          {
            "id": "goInstalled",
            "title": "Go installed",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=GoInstalled",
            "checkType": "outputContains",
            "expectedValue": "go version go1",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=GoInstalled"
          },
          {
            "id": "goLocation",
            "title": "Go location: $HOME/go",
            "checkType": "pathExists",
            "pathValue": "$HOME/go",
            "pathType": "directory"
          },
          {
            "id": "goPathConfig",
            "title": "GOPATH configured: $HOME/go",
            "checkType": "envVarEquals",
            "variableName": "GOPATH",
            "expectedValue": "$HOME/go",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=GoInstalled"
          },
          {
            "id": "goPathIncludes",
            "title": "PATH includes: $GOPATH/bin",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=GoInstalled",
            "checkType": "outputContains",
            "expectedValue": "go version"
          }
        ]
      }
    },
    {
      "category": {
        "title": "Additional",
        "verifications": [
          {
            "id": "javaVersion",
            "title": "Java 17 installed",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=JavaInstalled",
            "checkType": "outputContains",
            "expectedValue": "openjdk version \"17.",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=JavaInstalled",
            "fixPriority": 2
          },
          {
            "id": "additionalCloudbees",
            "title": "CLOUDBEES_FEATURES_ENV_KEY",
            "checkType": "envVarExists",
            "variableName": "CLOUDBEES_FEATURES_ENV_KEY"
          },
          {
            "id": "homebrewInstalled",
            "title": "Homebrew installed",
            "command": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=verification --id=HomebrewInstalled",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/test-utils/commands/mock-verify.js --type=fix --id=HomebrewInstalled",
            "fixPriority": 1
          }
        ]
      }
    }
  ]
}