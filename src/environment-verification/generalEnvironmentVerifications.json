{
  "header": {
    "title": "General Environment",
    "dropdownSelectors": [
      {
        "id": "gcloudProject",
        "command": "gcloud projects list --format=\"value(projectId)\"",
        "parseResponse": "lines",
        "placeholder": "Select project...",
        "loadingText": "Loading projects...",
        "errorText": "Error loading projects",
        "noOptionsText": "No projects found",
        "defaultValue": {
              "contains": "dev5"
        },
        "commandOnChange": "gcloud config set project ${gcloudProject}"
      }
    ]
  },
  "categories": [
    {
      "category": {
        "title": "Cloud",
        "verifications": [
          {
            "id": "cloudGcloudCLI",
            "title": "gcloud CLI",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify cloudGcloudCLI",
            "checkType": "outputContains",
            "expectedValue": "Google Cloud SDK",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix cloudGcloudCLI",
            "fixPriority": 3
          },
          {
            "id": "fileExistsTest",
            "title": "Check if /tmp/testfile exists",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify fileExistsTest",
            "checkType": "outputContains",
            "expectedValue": "exists",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix fileExistsTest",
            "fixPriority": 3,
            "testVerification": true
          },
          {
            "id": "cloudKubectlCLI",
            "title": "kubectl CLI",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify cloudKubectlCLI",
            "checkType": "outputContains",
            "expectedValue": "Client Version:",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix cloudKubectlCLI",
            "fixPriority": 3
          },
          {
            "id": "cloudKubectx",
            "title": "kubectx",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify cloudKubectx",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix cloudKubectx",
            "fixPriority": 3
          }
        ]
      }
    },
    {
      "category": {
        "title": "Container Runtime",
        "verifications": [
          {
            "id": "dockerRunning",
            "title": "Docker Desktop running",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify dockerRunning",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix dockerRunning",
            "fixPriority": 1
          },
          {
            "id": "dockerDaemon",
            "title": "Docker daemon accessible",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify dockerDaemon",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix dockerDaemon",
            "fixPriority": 1
          },
          {
            "id": "rancherDesktop",
            "title": "Rancher Desktop (if installed)",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify rancherDesktop",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix rancherDesktop",
            "fixPriority": 4
          },
          {
            "id": "containerRuntime",
            "title": "Container runtime available",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify containerRuntime",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix containerRuntime",
            "fixPriority": 1
          }
        ]
      }
    },
    {
      "category": {
        "title": "Node.js",
        "verifications": [
          {
            "id": "nodeJs",
            "title": "Node.js 15.x or 16.x",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify nodeJs",
            "checkType": "outputContains",
            "expectedValue": ["v15.", "v16."],
            "versionId": "nodeVersion",
            "outputStream": "stdout",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix nodeJs",
            "fixPriority": 2
          },
          {
            "id": "nvmInstalled",
            "title": "Nvm installed",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify nvmInstalled",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix nvmInstalled",
            "fixPriority": 1
          }
        ]
      }
    },
    {
      "category": {
        "title": "Go",
        "verifications": [
          {
            "id": "goInstalled",
            "title": "Go installed",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify goInstalled",
            "checkType": "outputContains",
            "expectedValue": "go version go1",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix goInstalled",
            "fixPriority": 2
          },
          {
            "id": "goLocation",
            "title": "Go location: $HOME/go",
            "checkType": "pathExists",
            "pathValue": "$HOME/go",
            "pathType": "directory"
          },
          {
            "id": "goPathConfig",
            "title": "GOPATH configured: $HOME/go",
            "checkType": "envVarEquals",
            "variableName": "GOPATH",
            "expectedValue": "$HOME/go",
            "fixCommand": "GOPATH_LINE='export GOPATH=$HOME/go\\nexport PATH=$PATH:$GOPATH/bin'; for f in ~/.zshrc ~/.bash_profile; do [ -f \"$f\" ] || touch \"$f\"; printf \"$GOPATH_LINE\\n\" >> \"$f\"; done; [ -n \"$ZSH_VERSION\" ] && source ~/.zshrc || { [ -n \"$BASH_VERSION\" ] && source ~/.bash_profile; }"
          },
          {
            "id": "goPathIncludes",
            "title": "PATH includes: $GOPATH/bin",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify goPathIncludes",
            "checkType": "outputContains",
            "expectedValue": "$GOPATH/bin",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix goPathIncludes",
            "fixPriority": 2
          }
        ]
      }
    },
    {
      "category": {
        "title": "Additional",
        "verifications": [
          {
            "id": "javaVersion",
            "title": "Java 17 installed",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify javaVersion",
            "checkType": "outputContains",
            "expectedValue": "openjdk version \"17.",
            "outputStream": "stderr",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix javaVersion",
            "fixPriority": 2
          },
          {
            "id": "additionalCloudbees",
            "title": "CLOUDBEES_FEATURES_ENV_KEY",
            "checkType": "envVarExists",
            "variableName": "CLOUDBEES_FEATURES_ENV_KEY"
          },
          {
            "id": "homebrewInstalled",
            "title": "Homebrew installed",
            "command": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js verify homebrewInstalled",
            "checkType": "commandSuccess",
            "fixCommand": "node ./ProjectName-Manager/scripts/simulators/verification-simulator.js fix homebrewInstalled",
            "fixPriority": 1
          }
        ]
      }
    }
  ]
}