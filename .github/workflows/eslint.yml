name: ESLint Check

on:
  pull_request:
    branches: [ main ]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up NVM and Node.js 22.16.0
        run: |
          export NVM_DIR="$HOME/.nvm"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          . "$NVM_DIR/nvm.sh"
          nvm install 22.16.0
          nvm use 22.16.0
          node -v
          npm -v
      - name: Install dependencies
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          npm ci
      - name: Run ESLint
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          # Run ESLint and save output
          npm run lint 2>&1 | tee eslint-output.txt || true

      - name: Extract ESLint Results
        run: |
          # Find the problems summary line (e.g., "‚úñ 38 problems (0 errors, 38 warnings)")
          PROBLEMS_LINE=$(grep -E "problems \(" eslint-output.txt | head -1 || echo "")
          ERRORS=$(echo "$PROBLEMS_LINE" | grep -oE '[0-9]+ errors' | grep -oE '[0-9]+' || echo "0")
          WARNINGS=$(echo "$PROBLEMS_LINE" | grep -oE '[0-9]+ warnings' | grep -oE '[0-9]+' || echo "0")
          echo "ESLINT_ERRORS=$ERRORS" >> $GITHUB_ENV
          echo "ESLINT_WARNINGS=$WARNINGS" >> $GITHUB_ENV

      - name: Post PR comment with ESLint summary
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-title: "üîé Test Summary"
          edit-mode: append
          body: |
            ### ESLint Results
            
            ‚úèÔ∏è **${{ env.ESLINT_ERRORS }} errors, ${{ env.ESLINT_WARNINGS }} warnings**

      - name: Fail job if ESLint errors detected
        if: always()
        run: |
          if [ "${{ env.ESLINT_ERRORS }}" != "0" ]; then
            echo "ESLint reported errors"
            exit 1
          fi

