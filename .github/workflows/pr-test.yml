name: PR Test Verification

on:
  pull_request:
    branches: [ main ]

jobs:
  jest-mock:
    name: Jest Mock Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up NVM and Node.js 22.16.0
        run: |
          export NVM_DIR="$HOME/.nvm"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          . "$NVM_DIR/nvm.sh"
          nvm install 22.16.0
          nvm use 22.16.0
          node -v
          npm -v
      - name: Install dependencies
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          npm ci
      - name: Run Jest Mock Coverage
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          npm run test:jest:mock:coverage
      - name: Print Jest Mock Coverage Summary
        run: |
          if [ -f coverage/mock/coverage-summary.json ]; then
            npx nyc report --reporter=text-summary --report-dir=coverage/mock --temp-dir=coverage/mock;
          else
            echo "No mock coverage summary found.";
          fi
      - name: Upload Mock Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jest-mock-coverage
          path: coverage/mock/

  jest-prod:
    name: Jest Prod Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up NVM and Node.js 22.16.0
        run: |
          export NVM_DIR="$HOME/.nvm"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          . "$NVM_DIR/nvm.sh"
          nvm install 22.16.0
          nvm use 22.16.0
          node -v
          npm -v
      - name: Install dependencies
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          npm ci
      - name: Run Jest Prod Coverage
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          npm run test:jest:prod:coverage
      - name: Print Jest Prod Coverage Summary
        run: |
          if [ -f coverage/prod/coverage-summary.json ]; then
            npx nyc report --reporter=text-summary --report-dir=coverage/prod --temp-dir=coverage/prod;
          else
            echo "No prod coverage summary found.";
          fi
      - name: Upload Prod Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jest-prod-coverage
          path: coverage/prod/

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up NVM and Node.js 22.16.0
        run: |
          export NVM_DIR="$HOME/.nvm"
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
          . "$NVM_DIR/nvm.sh"
          nvm install 22.16.0
          nvm use 22.16.0
          node -v
          npm -v
      - name: Install dependencies
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          npm ci
      - name: Rebuild native modules for Electron
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          npx @electron/rebuild -f -w node-pty
      - name: Set up minimal environment for E2E
        run: |
          mkdir -p $HOME/gopm
          echo "export GOPM_HOME=$HOME/gopm" >> $GITHUB_ENV
          echo "export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
          echo "export PATH=$PATH:/usr/lib/jvm/java-11-openjdk-amd64/bin" >> $GITHUB_ENV
          echo "export FAKE_GCLOUD_INSTALLED=true" >> $GITHUB_ENV
      - name: Run E2E Tests (with Xvfb)
        run: |
          export NVM_DIR="$HOME/.nvm"
          . "$NVM_DIR/nvm.sh"
          nvm use 22.16.0
          xvfb-run -a npm run test:e2e 